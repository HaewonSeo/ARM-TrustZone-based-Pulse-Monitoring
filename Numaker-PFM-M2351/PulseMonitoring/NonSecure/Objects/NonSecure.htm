<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\NonSecure.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\NonSecure.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6150002: Last Updated: Mon Jun 14 01:33:22 2021
<BR><P>
<H3>Maximum Stack Usage =        924 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
OLED_BPM &rArr; GUI_DisNum &rArr; GUI_DisString_EN &rArr; GUI_DisChar &rArr; GUI_DrawPoint &rArr; OLED_SetColor
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[32]">ACMP01_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">ACMP01_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[32]">ACMP01_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[6]">BOD_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[4b]">BPWM0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[4c]">BPWM1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[1e]">BRAKE0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[22]">BRAKE1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[3c]">CAN0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[a]">CLKFAIL_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[44]">CRPT_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[2f]">DAC_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[b]">DEFAULT_IRQHandler</a> from startup_m2351.o(.text) referenced 22 times from startup_m2351.o(RESET)
 <LI><a href="#[30]">EADC0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[31]">EADC1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[33]">EADC2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[34]">EADC3_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[50]">ECAP0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[51]">ECAP1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[10]">EINT0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[11]">EINT1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[12]">EINT2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[13]">EINT3_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[14]">EINT4_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[15]">EINT5_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[46]">EINT6_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[53]">EINT7_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[1f]">EPWM0_P0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[20]">EPWM0_P1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[21]">EPWM0_P2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[23]">EPWM1_P0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[24]">EPWM1_P1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[25]">EPWM1_P2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[16]">GPA_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[17]">GPB_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[18]">GPC_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[19]">GPD_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[1a]">GPE_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[1b]">GPF_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[45]">GPG_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[52]">GPH_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[2c]">I2C0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[2d]">I2C1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[4d]">I2C2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[42]">I2S0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[7]">IRC_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[5c]">OLED_BPM</a> from oled_gui.o(.text.OLED_BPM) referenced from main_ns.o(.text.main)
 <LI><a href="#[43]">OPA0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[2e]">PDMA0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[54]">PDMA1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[8]">PWRWU_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[5a]">ProcessHardFault</a> from retarget.o(.text.ProcessHardFault) referenced from startup_m2351.o(.text)
 <LI><a href="#[4e]">QEI0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[4f]">QEI1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[1c]">QSPI0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[c]">RTC_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[3d]">SC0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[3e]">SC1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[3f]">SC2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[55]">SCU_IRQHandler</a> from system_m2351.o(.text.SCU_IRQHandler) referenced from startup_m2351.o(RESET)
 <LI><a href="#[41]">SDH0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[5b]">SH_Return</a> from retarget.o(.text.SH_Return) referenced from startup_m2351.o(.text)
 <LI><a href="#[1d]">SPI0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[37]">SPI1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[38]">SPI2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[40]">SPI3_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[9]">SRAM_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from main_ns.o(.text.SysTick_Handler) referenced from startup_m2351.o(RESET)
 <LI><a href="#[58]">SystemInit</a> from system_m2351.o(.text.SystemInit) referenced from startup_m2351.o(.text)
 <LI><a href="#[d]">TAMPER_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[26]">TMR0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[27]">TMR1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[28]">TMR2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[29]">TMR3_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[56]">TRNG_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[2a]">UART0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[2b]">UART1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[35]">UART2_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[36]">UART3_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[47]">UART4_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[48]">UART5_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[39]">USBD_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[3a]">USBH_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[3b]">USBOTG_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[49]">USCI0_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[4a]">USCI1_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[e]">WDT_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[f]">WWDT_IRQHandler</a> from startup_m2351.o(.text) referenced from startup_m2351.o(RESET)
 <LI><a href="#[59]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_m2351.o(.text)
 <LI><a href="#[5e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[5d]">fputc</a> from retarget.o(.text.fputc) referenced from printfa.o(i.__0printf)
 <LI><a href="#[57]">main</a> from main_ns.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[aa]"></a>GetSystemCoreClock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nsclib.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[ad]"></a>Get_EncryptedDigitallySignedData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nsclib.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[ac]"></a>M2351_DeleteKey</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nsclib.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[ab]"></a>M2351_LoadKey</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nsclib.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[a9]"></a>Secure_OLED_On_callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nsclib.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[ae]"></a>printDigitallySignedData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nsclib.o(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main (via Veneer)
</UL>

<P><STRONG><a name="[59]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(.text)
</UL>
<P><STRONG><a name="[b7]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[75]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[b8]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b9]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[ba]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[bb]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[bc]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>ACMP01_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP01_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP01_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>BPWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>BPWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>BRAKE0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>BRAKE1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[bd]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text), UNUSED)

<P><STRONG><a name="[a]"></a>CLKFAIL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>CRPT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>DEFAULT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>EADC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>EADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>ECAP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>ECAP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EINT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EINT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>EINT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>EINT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EPWM0_P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EPWM0_P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>EPWM0_P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>EPWM1_P0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>EPWM1_P1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>EPWM1_P2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>GPA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>GPB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>GPC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>GPD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>GPE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>GPF_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>GPG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>GPH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>I2S0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>IRC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>OPA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>PDMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>PDMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PWRWU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>QEI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>QEI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>QSPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>SC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>SC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>SC2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>SC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>SDH0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[bf]"></a>SDH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text), UNUSED)

<P><STRONG><a name="[1d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SRAM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TMR0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>TMR1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>TMR2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TMR3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>TRNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>USBD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>USBH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>USBOTG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>USCI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>USCI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_m2351.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[c0]"></a>SH_DoCommand</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, startup_m2351.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__PC</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, startup_m2351.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[c2]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisNum
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
</UL>

<P><STRONG><a name="[c4]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[a7]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
</UL>

<P><STRONG><a name="[77]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
</UL>

<P><STRONG><a name="[78]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
</UL>

<P><STRONG><a name="[64]"></a>calloc</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, calloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = calloc &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
</UL>

<P><STRONG><a name="[66]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
</UL>

<P><STRONG><a name="[6f]"></a>__aeabi_d2iz</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dfixi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_d2iz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
</UL>

<P><STRONG><a name="[71]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[67]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[c6]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[70]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[c7]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[68]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[c8]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[c9]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[6a]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>

<P><STRONG><a name="[69]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[74]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[b3]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[60]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ca]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[cb]"></a>__aeabi_uidiv$div0</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[cc]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[cd]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>Control_SW3</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, main_ns.o(.text.Control_SW3))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = Control_SW3 &rArr; WIFI_ReceiveData &rArr; printNetworkData &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7c]"></a>Driver_Delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dev_config.o(.text.Driver_Delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Driver_Delay_ms &rArr; CLK_SysTickDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Reset
</UL>

<P><STRONG><a name="[92]"></a>GPIO_SetMode</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, gpio.o(.text.GPIO_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Config
</UL>

<P><STRONG><a name="[7e]"></a>GUI_DisChar</STRONG> (Thumb, 404 bytes, Stack size 96 bytes, oled_gui.o(.text.GUI_DisChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = GUI_DisChar &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisString_EN
</UL>

<P><STRONG><a name="[81]"></a>GUI_DisGrayMap</STRONG> (Thumb, 248 bytes, Stack size 64 bytes, oled_gui.o(.text.GUI_DisGrayMap))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = GUI_DisGrayMap &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Background_On
</UL>

<P><STRONG><a name="[82]"></a>GUI_DisNum</STRONG> (Thumb, 312 bytes, Stack size 608 bytes, oled_gui.o(.text.GUI_DisNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 868<LI>Call Chain = GUI_DisNum &rArr; GUI_DisString_EN &rArr; GUI_DisChar &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisString_EN
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_BPM
</UL>

<P><STRONG><a name="[83]"></a>GUI_DisString_EN</STRONG> (Thumb, 252 bytes, Stack size 80 bytes, oled_gui.o(.text.GUI_DisString_EN))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = GUI_DisString_EN &rArr; GUI_DisChar &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisChar
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisNum
</UL>

<P><STRONG><a name="[84]"></a>GUI_Disbitmap</STRONG> (Thumb, 194 bytes, Stack size 72 bytes, oled_gui.o(.text.GUI_Disbitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = GUI_Disbitmap &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Background_On
</UL>

<P><STRONG><a name="[85]"></a>GUI_DrawCircle</STRONG> (Thumb, 820 bytes, Stack size 96 bytes, oled_gui.o(.text.GUI_DrawCircle))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = GUI_DrawCircle &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
</UL>

<P><STRONG><a name="[86]"></a>GUI_DrawLine</STRONG> (Thumb, 568 bytes, Stack size 136 bytes, oled_gui.o(.text.GUI_DrawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = GUI_DrawLine &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Swop
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangle
</UL>

<P><STRONG><a name="[80]"></a>GUI_DrawPoint</STRONG> (Thumb, 288 bytes, Stack size 56 bytes, oled_gui.o(.text.GUI_DrawPoint))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetColor
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Disbitmap
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisGrayMap
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisChar
</UL>

<P><STRONG><a name="[89]"></a>GUI_DrawRectangle</STRONG> (Thumb, 432 bytes, Stack size 120 bytes, oled_gui.o(.text.GUI_DrawRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = GUI_DrawRectangle &rArr; GUI_DrawLine &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Swop
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
</UL>

<P><STRONG><a name="[8a]"></a>GUI_Show</STRONG> (Thumb, 804 bytes, Stack size 232 bytes, oled_gui.o(.text.GUI_Show))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = GUI_Show &rArr; GUI_DrawRectangle &rArr; GUI_DrawLine &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangle
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisString_EN
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Config
</UL>

<P><STRONG><a name="[87]"></a>GUI_Swop</STRONG> (Thumb, 34 bytes, Stack size 28 bytes, oled_gui.o(.text.GUI_Swop))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GUI_Swop
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangle
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
</UL>

<P><STRONG><a name="[5c]"></a>OLED_BPM</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, oled_gui.o(.text.OLED_BPM))
<BR><BR>[Stack]<UL><LI>Max Depth = 924<LI>Call Chain = OLED_BPM &rArr; GUI_DisNum &rArr; GUI_DisString_EN &rArr; GUI_DisChar &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisNum
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetWindow
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DisWindow
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ClearWindow
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_ns.o(.text.main)
</UL>
<P><STRONG><a name="[90]"></a>OLED_Background_On</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, oled_gui.o(.text.OLED_Background_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = OLED_Background_On &rArr; OLED_DisWindow &rArr; OLED_SetWindow &rArr; OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Disbitmap
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisGrayMap
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetWindow
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DisWindow
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_ClearWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>OLED_Clear</STRONG> (Thumb, 100 bytes, Stack size 12 bytes, oled_driver.o(.text.OLED_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Off
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
</UL>

<P><STRONG><a name="[8e]"></a>OLED_ClearWindow</STRONG> (Thumb, 208 bytes, Stack size 76 bytes, oled_driver.o(.text.OLED_ClearWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = OLED_ClearWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Background_On
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_BPM
</UL>

<P><STRONG><a name="[91]"></a>OLED_Config</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, oled_gui.o(.text.OLED_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = OLED_Config &rArr; GUI_Show &rArr; GUI_DrawRectangle &rArr; GUI_DrawLine &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetMode
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8f]"></a>OLED_DisWindow</STRONG> (Thumb, 256 bytes, Stack size 96 bytes, oled_driver.o(.text.OLED_DisWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = OLED_DisWindow &rArr; OLED_SetWindow &rArr; OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Background_On
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_BPM
</UL>

<P><STRONG><a name="[8c]"></a>OLED_Display</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, oled_driver.o(.text.OLED_Display))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = OLED_Display &rArr; OLED_SetWindow &rArr; OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Off
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Config
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Show
</UL>

<P><STRONG><a name="[94]"></a>OLED_Init</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, oled_driver.o(.text.OLED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = OLED_Init &rArr; OLED_InitReg &rArr; OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteReg
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetGramScanWay
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Reset
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_InitReg
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Config
</UL>

<P><STRONG><a name="[9a]"></a>OLED_Off</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, oled_gui.o(.text.OLED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = OLED_Off &rArr; OLED_Display &rArr; OLED_SetWindow &rArr; OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[88]"></a>OLED_SetColor</STRONG> (Thumb, 140 bytes, Stack size 28 bytes, oled_driver.o(.text.OLED_SetColor))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OLED_SetColor
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
</UL>

<P><STRONG><a name="[98]"></a>OLED_SetGramScanWay</STRONG> (Thumb, 80 bytes, Stack size 4 bytes, oled_driver.o(.text.OLED_SetGramScanWay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = OLED_SetGramScanWay
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[8d]"></a>OLED_SetWindow</STRONG> (Thumb, 156 bytes, Stack size 48 bytes, oled_driver.o(.text.OLED_SetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = OLED_SetWindow &rArr; OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Background_On
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_BPM
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DisWindow
</UL>

<P><STRONG><a name="[95]"></a>OLED_WriteData</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, oled_driver.o(.text.OLED_WriteData))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OLED_WriteData &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4W_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Display
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_DisWindow
</UL>

<P><STRONG><a name="[99]"></a>OLED_WriteReg</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, oled_driver.o(.text.OLED_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI4W_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_SetWindow
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_InitReg
</UL>

<P><STRONG><a name="[5a]"></a>ProcessHardFault</STRONG> (Thumb, 1488 bytes, Stack size 304 bytes, retarget.o(.text.ProcessHardFault))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = ProcessHardFault &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCU_IRQHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>SCU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_m2351.o(.text.SCU_IRQHandler))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessHardFault
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>SH_Return</STRONG> (Thumb, 14 bytes, Stack size 12 bytes, retarget.o(.text.SH_Return))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SH_Return
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(.text)
</UL>
<P><STRONG><a name="[9b]"></a>SPI4W_Write_Byte</STRONG> (Thumb, 44 bytes, Stack size 4 bytes, dev_config.o(.text.SPI4W_Write_Byte))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SPI4W_Write_Byte
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteReg
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteData
</UL>

<P><STRONG><a name="[9c]"></a>SendChar</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, retarget.o(.text.SendChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SendChar &rArr; SendChar_ToUART
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar_ToUART
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[9d]"></a>SendChar_ToUART</STRONG> (Thumb, 72 bytes, Stack size 4 bytes, retarget.o(.text.SendChar_ToUART))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SendChar_ToUART
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 136 bytes, Stack size 4 bytes, main_ns.o(.text.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SystemInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_m2351.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_m2351.o(.text)
</UL>
<P><STRONG><a name="[93]"></a>System_Init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, dev_config.o(.text.System_Init))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Config
</UL>

<P><STRONG><a name="[a0]"></a>WIFI_Connect</STRONG> (Thumb, 796 bytes, Stack size 144 bytes, wifi.o(.text.WIFI_Connect))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = WIFI_Connect &rArr; WIFI_Write &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Write
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Read
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysTickLongDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a3]"></a>WIFI_Read</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, wifi.o(.text.WIFI_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIFI_Read &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
</UL>

<P><STRONG><a name="[7b]"></a>WIFI_ReceiveData</STRONG> (Thumb, 752 bytes, Stack size 128 bytes, wifi.o(.text.WIFI_ReceiveData))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = WIFI_ReceiveData &rArr; printNetworkData &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printNetworkData
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
</UL>

<P><STRONG><a name="[79]"></a>WIFI_SendData</STRONG> (Thumb, 304 bytes, Stack size 80 bytes, wifi.o(.text.WIFI_SendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = WIFI_SendData &rArr; WIFI_Write &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sprintf
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Write
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
</UL>

<P><STRONG><a name="[a6]"></a>WIFI_Send_EncryptedDigitallySignedData</STRONG> (Thumb, 688 bytes, Stack size 136 bytes, wifi.o(.text.WIFI_Send_EncryptedDigitallySignedData))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = WIFI_Send_EncryptedDigitallySignedData &rArr; WIFI_SendData &rArr; WIFI_Write &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printNetworkData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;keyToStringKey
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a2]"></a>WIFI_Write</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, wifi.o(.text.WIFI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WIFI_Write &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
</UL>

<P><STRONG><a name="[5d]"></a>fputc</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, retarget.o(.text.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = fputc &rArr; SendChar &rArr; SendChar_ToUART
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChar
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0printf)
</UL>
<P><STRONG><a name="[57]"></a>main</STRONG> (Thumb, 460 bytes, Stack size 248 bytes, main_ns.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 844<LI>Call Chain = main &rArr; OLED_Config &rArr; GUI_Show &rArr; GUI_DrawRectangle &rArr; GUI_DrawLine &rArr; GUI_DrawPoint &rArr; OLED_SetColor
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Off
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Config
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Background_On
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printDigitallySignedData (via Veneer)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Secure_OLED_On_callback (via Veneer)
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M2351_LoadKey (via Veneer)
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;M2351_DeleteKey (via Veneer)
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_EncryptedDigitallySignedData (via Veneer)
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSystemCoreClock (via Veneer)
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a4]"></a>printNetworkData</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, wifi.o(.text.printNetworkData))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = printNetworkData &rArr; printf
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printf
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
</UL>

<P><STRONG><a name="[af]"></a>__0printf</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[ce]"></a>__1printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[cf]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[d0]"></a>__c89printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf), UNUSED)

<P><STRONG><a name="[7f]"></a>printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0printf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = printf
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawRectangle
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawPoint
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawLine
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DrawCircle
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisString_EN
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisNum
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisGrayMap
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_DisChar
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessHardFault
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printNetworkData
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Write
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_ReceiveData
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Read
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
</UL>

<P><STRONG><a name="[b1]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[d1]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[d2]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[d3]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[a5]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
</UL>

<P><STRONG><a name="[72]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[d4]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[d5]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[d6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[7a]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_SendData
</UL>

<P><STRONG><a name="[65]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Control_SW3
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[7d]"></a>CLK_SysTickDelay</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, dev_config.o(.text.CLK_SysTickDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CLK_SysTickDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_Delay_ms
</UL>

<P><STRONG><a name="[97]"></a>OLED_InitReg</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, oled_driver.o(.text.OLED_InitReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = OLED_InitReg &rArr; OLED_WriteReg &rArr; SPI4W_Write_Byte
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[96]"></a>OLED_Reset</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, oled_driver.o(.text.OLED_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = OLED_Reset &rArr; Driver_Delay_ms &rArr; CLK_SysTickDelay
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Driver_Delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OLED_Init
</UL>

<P><STRONG><a name="[a1]"></a>CLK_SysTickLongDelay</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, wifi.o(.text.CLK_SysTickLongDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_SysTickLongDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Connect
</UL>

<P><STRONG><a name="[a8]"></a>keyToStringKey</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, wifi.o(.text.keyToStringKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = keyToStringKey
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WIFI_Send_EncryptedDigitallySignedData
</UL>

<P><STRONG><a name="[9e]"></a>SysTick_Config</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, main_ns.o(.text.SysTick_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SysTick_Config &rArr; __NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9f]"></a>__NVIC_SetPriority</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, main_ns.o(.text.__NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Config
</UL>

<P><STRONG><a name="[b2]"></a>_fp_digits</STRONG> (Thumb, 344 bytes, Stack size 64 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b0]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf
</UL>

<P><STRONG><a name="[b5]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[b4]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
